services:
  traefik:
    image: "traefik:v3.0"
    command:
      #  - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
    - "80:80"
    - "443:443"
    networks:
    - k-network
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
  app-store:
    image: kprasad99/app-store:v1.0.1
    build: ./app-store
    networks:
    - k-network
    labels:
    - traefik.enable=true
    - traefik.http.routers.app-store.rule=PathPrefix(`/`)
    - traefik.http.routers.app-store.entrypoints=web
    - traefik.http.middlewares.redirect-middleware.redirectscheme.scheme=https
    - traefik.http.routers.app-store-web.middlewares=redirect-middleware
    - traefik.http.routers.app-store-websecure.rule=PathPrefix(`/`)
    - traefik.http.routers.app-store-websecure.entrypoints=websecure
    - traefik.http.routers.app-store-websecure.tls=true
    environment:
      app_conf_generate_base_url: "true"
      app_conf_authority: "https://${SERVER_IP}/auth/realms/universal"
      app_conf_client_id: "kp_prod_appstore"
      app_conf_response_type: "code"
      app_conf_scope: "openid profile email"
      app_conf_start_check_session: "true"
      app_conf_silent_renew: "true"
      app_conf_silent_renew_path: "/silent-renew.html"
      app_conf_disable_iat_offset_validation: "false"
  emp-app:
    image: kprasad99/employee-app:v1.0.0
    build:
      context: ./employee-app
      dockerfile: Dockerfile
    networks:
    - k-network
    labels:
    - traefik.enable=true
    - traefik.http.routers.emp-app.rule=PathPrefix(`/emp-app`)
    - traefik.http.routers.emp-app.entrypoints=web
    - traefik.http.middlewares.redirect-middleware.redirectscheme.scheme=https
    - traefik.http.routers.emp-app-web.middlewares=redirect-middleware
    - traefik.http.routers.emp-app-websecure.rule=PathPrefix(`/emp-app`)
    - traefik.http.routers.emp-app-websecure.entrypoints=websecure
    - traefik.http.routers.emp-app-websecure.tls=true
    environment: 
      app_conf_generate_base_url: "true"
      app_conf_authority: "https://${SERVER_IP}/auth/realms/universal"
      app_conf_client_id: "kp_prod_app1"
      app_conf_response_type: "code"
      app_conf_scope: "openid profile email"
      app_conf_start_check_session: "true"
      app_conf_silent_renew: "true"
      app_conf_silent_renew_path: "/silent-renew.html"
      app_conf_disable_iat_offset_validation: "false"
  employee-backend:
    image: kprasad99/employee-backend:1.0.0-alpha
    build:
      context: ./employee-backend
      dockerfile: DockerfileDev
    networks:
    - k-network
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.employee-backend-web.rule=PathPrefix(`/api`)"
    - "traefik.http.routers.employee-backend-web.entrypoints=web"
    - "traefik.http.routers.employee-backend-websecure.rule=PathPrefix(`/api`)"
    - "traefik.http.routers.employee-backend-websecure.entrypoints=websecure"
    - traefik.http.routers.employee-backend-websecure.tls=true
    environment:
      spring.security.oauth2.resourceserver.jwt.issuer-uri: http://keycloak:8080/auth/realms/universal
      ingress.urls: "https://${SERVER_IP}/auth/realms/universal"
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    networks:
    - k-network
    ports:
    - 18080:8080
    volumes: 
    - ./conf/keycloak:/opt/keycloak/data/import:z
    command:
      - start
      - --import-realm
      #- --optimized
      #- --auto-build
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak-web.rule=PathPrefix(`/auth`)"
      # http with redirection
      - traefik.http.middlewares.redirect-middleware.redirectscheme.scheme=https
      - traefik.http.routers.keycloak-web.entrypoints=web
      #- traefik.http.routers.web-router.rule=Host(`auth.kp.local`)
      - traefik.http.routers.keycloak-web.middlewares=redirect-middleware
      # https
      - "traefik.http.routers.keycloak-websecure.rule=PathPrefix(`/auth`)"
      - traefik.http.routers.keycloak-websecure.entrypoints=websecure
      - traefik.http.routers.keycloak-websecure.tls=true
      #- traefik.http.routers.websecure.rule=Host(`auth.kp.local`)
    environment:
      # https://www.keycloak.org/migration/migrating-to-quarkus
      # https://www.keycloak.org/server/containers
      PROXY_ADDRESS_FORWARDING: "true"
      KC_HTTP_RELATIVE_PATH: "/auth"
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: "false"
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      # don't set hostname else https://github.com/keycloak/keycloak/discussions/12466#discussioncomment-2964624
      # KC_HOSTNAME: "keycloak" 
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      # https://www.keycloak.org/server/features
      #KC_FEATURES:  "authorization,token-exchange,scripts,admin2,account2"
      KC_FEATURES:  "authorization,token-exchange,scripts,admin2,account3,login2"
      #KC_FEATURES_DISABLED: "admin2"
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
    depends_on:
      - postgres
  postgres:
    image: postgres:16-alpine3.20
    networks:
    - k-network
    environment:
      POSTGRES_PASSWORD: password
      #PGDATA: /var/lib/postgresql/data/pgdata 
    volumes:
    - ./conf/postgres/keycloak-init.sh:/docker-entrypoint-initdb.d/keycloak-init.sh
    #- ./.data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  k-network:
